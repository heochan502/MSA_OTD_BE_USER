<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.otd.otd_challenge.application.challenge.ChallengeMapper">
    <select id="findAll">
        SELECT cd_id AS id, cd_goal AS goal, cd_image AS image,
               cd_name AS name, cd_type AS type, cd_reward AS reward
        FROM challenge_definition
    </select>
    <select id="findAllProgressFromUserId">
        SELECT cp.user_id AS userId, cp.cp_id AS cpId, cp.cd_id AS cdId,
               cp.start_date, cp.end_date, cp.total_record, cd.cd_image AS image,
               cd.cd_type AS type, cd.cd_name AS `name`,
               cd.cd_reward AS reward
        FROM challenge_progress cp
        INNER JOIN challenge_definition cd
        ON cd.cd_id = cp.cd_id
        WHERE cp.user_id = #{userId}
        AND Year(cp.start_date) = #{year}
        AND Month(cp.start_date) = #{month}
    </select>
    <select id="findByType">
        SELECT cd.cd_id AS id, cd.cd_goal AS goal, cd.cd_image AS image,
        cd.cd_name AS name, cd.cd_type AS type, cd.cd_reward AS reward
        FROM challenge_definition cd
        WHERE cd.cd_id NOT IN(SELECT cp.cd_id FROM challenge_progress cp WHERE cp.user_id = #{userId}
                                                                        AND YEAR(cp.start_date) = #{year}
                                                                        AND MONTH(cp.start_date) = #{month})
        AND cd.cd_type = #{type}
    </select>
    <select id="findByTypeForCompetition">
        SELECT cd_id AS id, cd_goal AS goal, cd_image AS image,
        cd_name AS name, cd_type AS type, cd_reward AS reward
        FROM challenge_definition
        WHERE cd_name NOT IN(SELECT cd.cd_name
                            FROM challenge_definition cd
                            INNER JOIN challenge_progress cp
                            ON cd.cd_id = cp.cd_id AND cd.cd_type = #{type}
                            WHERE cp.user_id = #{userId}
                            AND YEAR(cp.start_date) = #{year}
                            AND MONTH(cp.start_date) = #{month})
        AND cd_type = #{type};
    </select>
    <select id="findProgressByUserIdAndCdId">
        WITH ranking AS (
        SELECT
        cp.cp_id,
        cp.user_id,
        cp.total_record,
        cp.is_success,
        RANK() OVER (ORDER BY cp.total_record DESC) AS my_rank
        FROM challenge_progress cp
        WHERE cp.cd_id = #{cdId}
        AND YEAR(cp.start_date) = #{year}
        AND MONTH(cp.start_date) = #{month}
        )
        SELECT
        r.cp_id, cd.cd_id AS cdId, cd.cd_name AS `name`, r.user_id,cd.cd_goal AS goal,
        r.total_record, cd.cd_reward AS reward, r.my_rank, cd.cd_unit AS unit,
        r.is_success,
        (SELECT COUNT(*) FROM ranking) AS total_users
        FROM ranking r
        INNER JOIN challenge_definition cd
        ON cd.cd_id = #{cdId}
        WHERE r.user_id = #{userId}
    </select>
    <select id="findRankingLimitFive">
        SELECT u.nick_name, u.pic, cp.total_record,
               RANK() OVER(ORDER BY cp.total_record DESC) AS `rank`
        FROM user u
        INNER JOIN challenge_progress cp
        ON u.user_id = cp.user_id
        WHERE cp.cd_id = #{cdId}
        AND Year(cp.start_date) = #{year}
        AND Month(cp.start_date) = #{month}
        LIMIT 5;
    </select>
</mapper>
